---
- name: Setup forester with libvirt
  hosts: localhost
  gather_facts: yes

  vars:
    pg_image: quay.io/fedora/postgresql-15
    pg_username: forester
    _postgresql_password_: forester
    pg_database: forester
    forester_http_port: 8280
    forester_controller_image: quay.io/forester/controller:latest

  tasks:
    - name: Install libvirt
      become: yes
      ansible.builtin.package:
        name:
          - libvirt
          - libvirt-daemon-kvm
          - python3-libvirt
          - python3-lxml
        state: present

    - name: Disable authentication for libvirt over tcp
      become: yes
      community.general.ini_file:
        path: /etc/libvirt/libvirtd.conf
        option: auth_tcp
        value: '"none"'

    - name: Enable libvirt service with tcp socket
      become: yes
      ansible.builtin.service:
        name: libvirtd-tcp.socket
        state: started
        enabled: true

    - name: Enable firewalld traffic on forester port in libvirt zone
      ansible.posix.firewalld:
        port: "{{ forester_http_port }}/tcp"
        zone: libvirt
        permanent: true
        state: enabled

    - name: Prepare podman volumes for forester
      become: yes
      containers.podman.podman_volume:
        name: "{{ item }}"
        state: present
      loop:
        - forester-pg
        - forester-img
        - forester-log

    - name: Prepare forester pod
      become: yes
      containers.podman.podman_pod:
        name: forester
        state: started
        # network: host
        ports:
          - "{{ forester_http_port }}:8000"
          - "69:6969/udp"

    - name: Start forester postgres database container
      become: yes
      containers.podman.podman_container:
        name: forester-pg
        image: "{{ pg_image }}"
        pod: forester
        state: started
        env:
          POSTGRESQL_USER: "{{ pg_username }}"
          POSTGRESQL_PASSWORD: "{{ _postgresql_password_ }}"
          POSTGRESQL_DATABASE: "{{ pg_database }}"
        volume:
          - forester-pg:/var/lib/pgsql/data:Z

    - name: Wait for the dabase to be ready
      become: yes
      containers.podman.podman_container_exec:
        name: forester-pg
        command: "pg_isready -d {{ pg_database }}"
      retries: 5
      delay: 3
      register: forester_pg_ready
      until: forester_pg_ready.rc == 0

    - name: Start podman forester controller
      become: yes
      containers.podman.podman_container:
        name: forester-api
        image: "{{ forester_controller_image }}"
        pod: forester
        state: started
        env:
          DATABASE_USER: "{{ pg_username }}"
          DATABASE_PASSWORD: "{{ _postgresql_password_ }}"
          # POSTGRESQL_DATABASE: "{{ pg_database }}"
          APP_HOSTNAME: "192.168.122.1"
          APP_BASE_URL: "http://192.168.122.1:{{ forester_http_port }}"
        volume:
          - forester-img:/images:Z
          - forester-log:/logs:Z
